
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rcwcurpxbynaaxydivdx.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJjd2N1cnB4YnluYWF4eWRpdmR4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMxOTM4MzQsImV4cCI6MjA1ODc2OTgzNH0.oc_Hhs-dWDBrYd0ZrMT45AcjN3QUztZy_z311wSMN8Y";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      storage: localStorage,
      autoRefreshToken: true,
      detectSessionInUrl: true, // Detect OAuth session in URL
    },
    global: {
      headers: {
        'Content-Type': 'application/json',
      },
    },
    realtime: {
      params: {
        eventsPerSecond: 10,
      },
    },
  }
);

// Utility function to check if a user is authenticated
export const isUserAuthenticated = async () => {
  const { data, error } = await supabase.auth.getSession();
  return { 
    isAuthenticated: !!data.session, 
    session: data.session, 
    error 
  };
};

// Utility function to get current user profile
export const getCurrentUserProfile = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  if (!session) return { profile: null, error: new Error('No active session') };
  
  try {
    const { data, error } = await supabase
      .from('profiles')
      .select('*')
      .eq('id', session.user.id)
      .single();
      
    if (error) throw error;
    return { profile: data, error: null };
  } catch (error) {
    console.error("Error fetching profile:", error);
    return { profile: null, error };
  }
};

// Test connection to Supabase
export const testSupabaseConnection = async () => {
  try {
    const { error } = await supabase.from('profiles').select('count', { count: 'exact', head: true });
    if (error) throw error;
    console.log("✅ Supabase connection successful");
    return { success: true, error: null };
  } catch (error) {
    console.error("❌ Supabase connection failed:", error);
    return { success: false, error };
  }
};

// Call test connection on import
testSupabaseConnection();
